{"version":3,"sources":["Components/Gallery/Gallery.js","Components/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["Gallery","props","gallery","loadMore","launchModal","selectedImage","console","log","className","map","image","index","key","id","Math","ceil","height","width","src","urls","small","alt","description","data-toggle","data-target","onClick","type","tabIndex","role","aria-labelledby","aria-hidden","href","page","target","rel","username","SearchBar","fetchInitialImages","handleChange","handleSubmit","style","cursor","onSubmit","aria-label","onChange","App","ROOT","KEY","PERPAGE","setState","searchedQuery","axios","get","then","res","results","data","prevState","regular","user","links","html","state","currentQuery","e","value","preventDefault","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8867991a.chunk.js","sourcesContent":["import React from 'react'\n\nimport './styles.css'\n\nconst Gallery = (props) => {\n  const { gallery, loadMore, launchModal, selectedImage } = props\n  console.log('gallery = ', gallery)\n  return (\n    <div className=\"content\">\n      <section className=\"grid\">\n        {gallery.map( (image, index) => (\n          <div\n            key={image.id}\n            className={`item item-${Math.ceil(\n              image.height / image.width,\n            )}`}\n          >\n            <img\n              src={image.urls.small}\n              alt={image.description}\n              data-toggle=\"modal\" data-target=\"#selected-img-modal\"\n              onClick={() => launchModal(index)}\n            />\n          </div>\n        ))}\n      </section>\n      <button type=\"button\" className=\"btn btn-outline-primary\" onClick={loadMore}>Load more...</button>\n      {/* modal */}\n      <div className=\"modal fade\" id=\"selected-img-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"selected-img-modal-Label\" aria-hidden=\"true\">\n        <div className=\"modal-dialog modal-lg\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-body\">\n              <img src={selectedImage.src} alt={selectedImage.description} />\n              <hr/>\n              <p>{selectedImage.description}</p>\n              <p>Photo by <a href={selectedImage.page + `?utm_source=find-inspiration`} target=\"_blank\" rel=\"noopener noreferrer\">{selectedImage.username}</a> on <a href=\"https://unsplash.com/?utm_source=find-inspiration`\" target=\"_blank\" rel=\"noopener noreferrer\">Unsplash</a></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Gallery","import React from 'react'\n\nconst SearchBar = (props) => {\n  const { fetchInitialImages, handleChange, handleSubmit } = props\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container\">\n        <span className=\"navbar-brand\" onClick={fetchInitialImages} style={{cursor: 'pointer'}}>Find Inspiration</span>\n        <form className=\"form-inline my-2 my-lg-0 ml-auto\" onSubmit={handleSubmit}>\n          <input className=\"form-control mr-sm-2\" type=\"search\" aria-label=\"Search\" onChange={handleChange} />\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </nav>\n  )\n}\n\nexport default SearchBar","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport './App.css';\nimport Gallery from './Components/Gallery/Gallery'\nimport SearchBar from './Components/SearchBar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gallery: [],\n      currentQuery: '',\n      searchedQuery: '',\n      page: 1,\n      selectedImage: {\n        description: '',\n        src: '',\n        username: '',\n        page: '',\n      },\n    }\n  }\n  ROOT = `https://api.unsplash.com/`\n  KEY =\"?client_id=Ec1n2AKEb00jiprb4C_6LFncc57yZHxst8TYXNPvp7s\"\n  PERPAGE = `&per_page=30`\n\n  fetchInitialImages = () => {\n    this.setState({ searchedQuery: 'Curated Collection'})\n    axios.get(`${this.ROOT}photos${this.KEY}${this.PERPAGE}&page=1`)\n      .then(res => {\n        let results = res.data\n        console.log('results = ', results)\n        this.setState(() => {\n          return { gallery: [...results] }\n        })\n      })\n  }\n  \n  launchModal = (index) => {\n    this.setState((prevState) => {\n      return { \n        selectedImage: {\n          description: prevState.gallery[index].description,\n          src: prevState.gallery[index].urls.regular,\n          username: prevState.gallery[index].user.username,\n          page: prevState.gallery[index].user.links.html,\n        }\n      }\n    })\n  }\n\n  loadMore = () => {\n    this.setState((prevState) => {\n      return {page: prevState.page + 1}\n    }, () => {\n      if (this.state.searchedQuery === 'Curated Collection') {\n        axios.get(`${this.ROOT}photos${this.KEY}${this.PERPAGE}&page=${this.state.page}`)\n          .then(res => {\n            let results = res.data\n            console.log('results = ', results)\n            this.setState((prevState) => {\n              return { gallery: [...prevState.gallery, ...results] }\n            })\n          })\n      } else {\n        axios.get(`${this.ROOT}search/photos${this.KEY}&query=${this.state.currentQuery}${this.PERPAGE}&page=${this.state.page}`)\n          .then(res => {\n            let results = res.data.results\n            console.log('results = ', results)\n            this.setState((prevState) => {\n              return { gallery: [...prevState.gallery, ...results] }\n            })\n          })\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.fetchInitialImages()\n  }\n\n  // currentItem\n  // handleChangeInitialized = false\n  // isCurrentItemInitialized = true\n  handleChange = (e) => {\n    // this.handleChangeInitialized = true\n    // this.isCurrentItemInitialized = true\n    // this.currentItem = this.state.currentQuery\n    this.setState({\n      currentQuery: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.setState((prevState) => {\n      return {searchedQuery: prevState.currentQuery}\n    })\n    axios.get(`${this.ROOT}search/photos${this.KEY}&query=${this.state.currentQuery}${this.PERPAGE}`)\n      .then(res => {\n        let results = res.data.results\n        console.log('results = ', results)\n        this.setState({\n          gallery: [...results]\n        })\n      })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      <SearchBar fetchInitialImages={this.fetchInitialImages} handleChange={this.handleChange} handleSubmit={this.handleSubmit} />\n        <div className=\"container\">\n          <h1 className=\"text-center\">{this.state.searchedQuery}</h1>\n          <Gallery gallery={this.state.gallery} loadMore={this.loadMore} launchModal={this.launchModal} selectedImage={this.state.selectedImage} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}